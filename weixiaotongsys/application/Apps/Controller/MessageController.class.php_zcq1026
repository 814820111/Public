<?php

namespace Apps\Controller;
use Common\Controller\AppBaseController;
/**
 * 首页
 */
class MessageController extends AppBaseController {
    //获取用户发送的普通信息
    // public function get_send_message(){
    //     // $userid = I('userid');
    //     // $typeid = I('typeid');
    //     // if($_GET['begin_time']&&$_GET['end_time']){
    //     //     $where['begin_time']=intval($_GET['begin_time']);
    //     //     $where['end_time']=intval($_GET['end_time']);
    //     //     if($_GET['send_user']&&$_GET['receive_user_id'])
    //     // }
    //     // $message_list = M('user_message')->where(array("receive_user_id"=>$userid,'message_type'=>$typeid))->select();
    //     $message_type = 1;
    //     $userid = $_POST['userid'];
    //     $this->_user_send_message($message_type,$userid);
    // }
    // //获取用户发送的群发信息
    // public function get_mass_message(){
    //     $message_type = 5;
    //     $userid = $_REQUEST['userid'];
    //     $this->_user_send_message($message_type,$userid);
    // }
    //获取用户发送的消息
    public function user_send_message(){
        $send_user_id=0;
        if(!empty($_REQUEST["send_user_id"])){
            $send_user_id=$_REQUEST["send_user_id"];
        }
        //获取到的type值和发送人id
        $where_ands=empty($send_user_id)?array(""):array("a.send_user_id = $send_user_id");
        $fields=array(
                'start_time'=> array("field"=>"a.message_time","operator"=>">"),
                'end_time'  => array("field"=>"a.message_time","operator"=>"<"),
                // 'reception_user_name'  => array("field"=>"r.reception_user_name","operator"=>"like"),
        );
        if(IS_POST){
            
            foreach ($fields as $param =>$val){
                if (isset($_POST[$param]) && !empty($_POST[$param])) {
                    $operator=$val['operator'];
                    $field   =$val['field'];
                    $get=$_POST[$param];
                    $_GET[$param]=$get;
                    if($operator=="like"){
                        $get="%$get%";
                    }
                    array_push($where_ands, "$field $operator '$get'");
                }
            }
        }else{
            foreach ($fields as $param =>$val){
                if (isset($_GET[$param]) && !empty($_GET[$param])) {
                    $operator=$val['operator'];
                    $field   =$val['field'];
                    $get=$_GET[$param];
                    if($operator=="like"){
                        $get="%$get%";
                    }
                    array_push($where_ands, "$field $operator '$get'");
                }
            }
        }
        if(empty($_REQUEST['reception_user_name'])){
            //不限制接收人,获取到的reception_user_name为空
            $where= join(" and ", $where_ands);
            //如果不限制接收人
            // $count=M('user_message')
            // ->alias("a")
            // ->where($where)
            // ->count();
            // $page = $this->page($count, 20);
            $messages=M('user_message')
            ->alias("a")
            ->where($where)
            ->limit($page->firstRow . ',' . $page->listRows)
            ->order("a.message_time DESC")
            ->select();
        }else{
            //如果限制接收人,获取到接收人姓名
            $reception_user_name = $_REQUEST['reception_user_name'];
            //将与获取到的名字相似的接收人姓名存到$where_ands数组中
            array_push($where_ands, "r.receiver_user_name like '%$reception_user_name%'");
            $where= join(" and ", $where_ands);
            $messages=M('user_message')
            ->alias("a")
            ->join("wxt_user_message_reception r ON a.id=r.message_id")//信息表id=接收信息人表message_id
            ->where($where)
            ->field('a.id,a.send_user_name,a.message_content,a.message_time')
            ->limit($page->firstRow . ',' . $page->listRows)
            ->order("a.message_time DESC")
            ->select();
        }
        //获取接收人列表
        foreach ($messages as &$messageinfo) {
             $receiver=M('user_message_reception')
            ->alias("m")
            ->join("wxt_wxtuser r ON m.receiver_user_id=r.id")
            ->where(array("m.message_id"=>$messageinfo['id']))
            ->field('receiver_user_id,receiver_user_name,read_time,photo,phone')
            ->select();
            $messageinfo["receiver"]=$receiver;
            //赋值接收人数量
            $messageinfo["receiver_num"] = count($receiver);
            unset($messageinfo);
        }
        //获取图片列表
        foreach ($messages as &$messageinfo) {
             $picture=M('user_message')
            ->alias("m")
            ->join("wxt_user_message_pic p ON m.id=p.message_id")
            ->where(array("p.message_id"=>$messageinfo['id']))
            ->field('picture_url')
            ->select();
            $messageinfo["picture"]=$picture;
            unset($messageinfo);
        }
        if($messages){
            $ret = $this->format_ret(1,$messages);
        }else{
            $ret = $this->format_ret(0,'未获取到数据');
        }  
        echo json_encode($ret);
    exit;     
    }
    //获取用户已接收的信息
    public function user_reception_message(){
        $receiver_user_id=Intval(I('receiver_user_id'));
        $receive=M('user_message_reception')
        ->alias("a")
        ->field("a.id,a.message_id,a.receiver_user_id,a.receiver_user_name,a.message_type,a.read_time")
        ->where("receiver_user_id=$receiver_user_id")
        ->limit($page->firstRow . ',' . $page->listRows)
        ->order("a.id DESC")
        ->select();

        foreach ($receive as &$send) {
            $refid=$send['message_id'];
            $send_message=M('user_message')
            ->alias("u")
            ->join("wxt_wxtuser w ON w.id=u.send_user_id")
            ->field("u.id,u.schoolid,u.send_user_id,u.send_user_name,u.message_content,u.message_time,w.photo")
            ->where("u.id=$refid")
            ->order("message_time DESC")
            ->select();
            $send["send_message"]=$send_message;
            unset($send);
        }  
        
        foreach ($receive as &$res_info) {
            $receiverid=$res_info['message_id'];
            $mes=M('user_message_reception')
            ->alias("u")
            ->join("wxt_wxtuser e ON u.receiver_user_id=e.id")
            ->field("message_id,receiver_user_id,receiver_user_name,read_time,photo,phone")
            ->where("u.message_id=$receiverid")
            ->select();
            $res_info['receiver']=$mes;
            //获取图片
            $pic=M('user_message_pic')->field("picture_url")->where("message_id=$receiverid")->select();
            $res_info['pic']=$pic;
            unset($res_info);
        } 
        if($receive){
            $ret = $this->format_ret(1,$receive);
        }else{
            $ret = $this->format_ret(0,'未获取到数据');
        }  
        echo json_encode($ret);
    exit; 
    }
    //用户发送消息
    public function send_message(){
        //获取发送表中所需的字段值
        $data_send['send_user_id']=I('send_user_id');
        $data_send['schoolid']=I('schoolid');
        $data_send['send_user_name']=I('send_user_name');
        $data_send['message_content']=I('message_content');
        $data_send['message_time']=time();
        $genre=Intval(I('genre'));
        $send_ret=M('user_message')->add($data_send);
        //获取接收表中所需字段值,因获取到的是多个receiver_user_id,所以用explode函数拆分开
        $receive_user_id = I('receiver_user_id');
        $receiveid_arr=explode(",",$receive_user_id);
        //将拆分后的id用foreach和settype函数转换为单个int值
        foreach ($receiveid_arr as &$receiverid) {
            $receiver_id_info=$receiverid;
            $receiver_id=settype($receiver_id_info,"integer");
                //通过receive_user_id在user表中获取到对应的name
                $receivername=M('wxtuser')
                ->where("id=$receiver_id_info")
                ->field("name")
                ->find();
            $receiverinfo=$receivername;
            //将获取到的name数组通过foreach转换为字符串
            foreach ($receiverinfo as $re_name) {
                $rename=$re_name;
            }
            //将接收人id和姓名存入表中
            $data_re['message_id']=$send_ret;
            $data_re['receiver_user_id']=$receiver_id_info;
            $data_re['receiver_user_name']=$rename;
            $receive_ret=M('user_message_reception')->add($data_re);
        }
        //图片存入表中
        $pic_model=M('user_message_pic');
        $pic=I('picture_url');
        $pic_arr=explode(",",$pic);
        for ($i=0; $i < count($pic_arr); $i++) { 
            $pic_model->add(array("message_id"=>$send_ret,"picture_url"=>$pic_arr[$i]));
        }
        if($send_ret){
            $ret = $this->format_ret(1,'成功');
            //推送功能,判断推送给家长端还是教师端
            if($genre > 1){
                $rs = $this->tjiguang("您收到一条新的群发消息,请注意查收!","message",$receiveid_arr,'',0);
            }else{
                $rs = $this->pjiguang("您收到一条新的群发消息,请注意查收!","message",$receiveid_arr,'',0);
            }
        }else{
            $ret = $this->format_ret(0,'未获取到数据');
        }  
        echo json_encode($ret);
        exit; 
    }
    //用户读取消息时间
    public function read_message(){
        $message_id=I('message_id');
        $receiver_user_id=I('receiver_user_id');
        $data['read_time']=time();
        $new_time=M('user_message_reception')->where("message_id=$message_id AND receiver_user_id=$receiver_user_id")->save($data);
         if($new_time){
            $ret = $this->format_ret(1,'成功');
        }else{
            $ret = $this->format_ret(0,'未获取到数据');
        }  
        echo json_encode($ret);
    exit; 
    }

    //教师端推送
    function tjiguang($content = "",$m_type='',$receive=""){
        $receiver = array('alias'=>$receive);
        $rs=tjpush($content,$m_type,$receiver,'',0);
        if($rs){
            $ret="success";
        }else{
            $ret="error";
        }
        return $ret;
    }
    //家长端推送
    function pjiguang($content = "",$m_type='',$receive=""){
        $receiver = array('alias'=>$receive);
        $rs=ujpush($content,$m_type,$receiver,'',0);
        if($rs){
            $ret="success";
        }else{
            $ret="error";
        }
        return $ret;
    }
    //参数获取(状态，原因)
    function format_ret ($status, $data='') {
            if ($status){
                //成功
                    return array('status'=>'success', 'data'=>$data);
            }else{
                //验证失败
                    return array('status'=>'error', 'data'=>$data);
            }
    }
}