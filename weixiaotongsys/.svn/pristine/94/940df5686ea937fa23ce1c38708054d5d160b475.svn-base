<!doctype html>
<html>

<head>
    <title>{$schoolname}</title>
    <meta charset="utf-8">
    <style type="text/css">

    </style>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- <link rel="stylesheet" href="css/bootstrap.css"> -->
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <link rel="stylesheet" href="__TMPL__Public/css/getMassage.css">
    <link rel="stylesheet" href="__TMPL__Public/css/top-box.css">
    <script src="http://apps.bdimg.com/libs/jquery/2.1.4/jquery.js"></script>
    <link rel="stylesheet" type="text/css" href="__TMPL__Public/css/commes.css" />
    <link rel="stylesheet" href="__TMPL__Public/css/photoswipe.css">
    <link rel="stylesheet" href="__TMPL__Public/css/default-skin/default-skin.css">
    <script src="__TMPL__Public/js/new_file.js"></script>
    <link rel="stylesheet" href="__TMPL__Public/css/bootstrap-dongtai.css">
    <script type="text/javascript" src="__ROOT__/statics/bootstrap/js/bootstrap.min.js"></script>
    <script src="__TMPL__Public/js/photoswipe.min.js"></script>
    <script src="__TMPL__Public/js/photoswipe-ui-default.min.js"></script>
    <style>
        .dropdown-toggle {
            position: fixed;
            bottom: 50px;
            width: 70px;
            height: 70px;
            border-radius: 40px;
            right: 10px;
            opacity: 0;
        }

        .dropdown-menu {
            position: fixed;
        }
    </style>

</head>

<body style="background-color: rgb(239,240,242);">
<input type="hidden" value={$userid} id="userid">
<div class="top_box">
    <img src="__TMPL__Public/images/img674.png" class="fanhui"> 信息
    <div class="clearfix"></div>
</div>

<div class="tab" style="position: fixed;top: 38px;width: 100%;font-weight: normal">
    <a href="{:('Huoqu')}">
            <span class="tro">
					获取的消息
        </span>
    </a>
    <a href="">
            <span class="one">
        	发布的消息
        	<div></div>
        </span>
    </a>

    <div class="clearfix"></div>
</div>
<div class="data" style="margin-top: 80px;">
    <div class="container" style=" overflow:hidden;">

        <div class="wteacher" id="test" style="background: rgb(239,240,242);">
        </div>
    </div>

</div>

</div>
<!--发布的浮动div-->
<div style=" background-color: #06c18e;color: white;position: fixed;width: 60px;text-align: center;line-height: 60px;border-radius: 50%;font-size: 14px;bottom: 50px;right: 10px;">
    <a href="" style=" text-decoration: none;color: inherit;">发布消息</a>
</div>
<div class="dropdown">
    <button type="button" class="btn dropdown-toggle" id="dropdownMenu1" data-toggle="dropdown">
        主题
        <span class="caret"></span>
    </button>
    <ul style="position: fixed;top: 75%;left: 37%;" class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">

        <li role="presentation">
            <a role="menuitem" tabindex="-1" href="{:U('Qunfa')}">老师群发公告</a>
        </li>
        <li role="presentation" class="divider"></li>
        <li role="presentation">
            <a role="menuitem" tabindex="-1" href="{:U('Parentfabu')}">学生群发公告</a>
        </li>
    </ul>
</div>

<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="pswp__bg"></div>
    <div class="pswp__scroll-wrap">
        <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
        </div>
        <div class="pswp__ui pswp__ui--hidden">
            <div class="pswp__top-bar">
                <div class="pswp__counter"></div>
                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div>
            </div>
            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>
            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>
        </div>
    </div>
</div>

<script>
    $("document").ready(function() {
        var send_user_id = $("#userid").val();

        $.ajax({
            type: "post",
            url: '__ROOT__/index.php/?g=apps&m=Message&a=user_send_message',
            async: true,
            data: {
                send_user_id: send_user_id
            },
            dataType: 'json',
            success: function(res) {
                var html = "";
                res = eval(res.data);
                console.log(res);
                for (var i = 0; i < res.length; i++) {
                    //内容ID
                    var message_id = res[i].id;
                    //发布的内容
                    var content = res[i].message_content;
                    //发布让的名字
                    var name = res[i].send_user_name;
                    //发布的时间
                    var shuliang = res[i].receiver.length;
                    //详情需要的参数
                    var time = tmies(res[i].message_time)
                    //发布的时间
                    // var photo = res[i].receiver[0].photo;//发布者头像
                    h = 0;
                    for (var k = 0; k < shuliang; k++) {
                        var read = res[i].receiver[k].read_time;
                        if (read == null) {
                            h++
                        }
                    }
                    var yidu = shuliang - h
                    //已读

                    html += '<div class="weiwie" style="margin-top: 8px ;background: #fff;padding: 8px 10px 10px;">'
                    html += '<div class="one">'
                    html += '<div class="left">'
                    html += '<img src="__TMPL__Public/images/feiji.png" alt="">'
                    html += '<span class="aei" style="color: #000000;">' + name + '</span>'
                    html += '</div>'

                    html += '<div class="clearfix"></div>'
                    html += '</div>'
                    html += '<div class="two">'
                    html += '<span class="aet">' + content + '</span>'
                    html += '<br>'
                    html += '<div class="aaaa">'
                    var num=res[i].picture.length;
                    if(num==1){
                        html += '<div style="width:100%;max-height:300px;" class="my">'
                        for (var k = 0; k < res[i].picture.length; k++) {
                            var zhaopian = res[i].picture[k].picture_url; //内容照片
                            var height = res[i].picture[k].pictureheight;//图片高度
                            if(height>0){
                                height = height;
                            }else{
                                height = 800;
                            }
                            var width = res[i].picture[k].picturewidth;//图片宽度
                            if(width>0){
                                width = width;
                            }else{
                                width = 800;
                            }
                            html += '<figure>'
                            html += ' <a href="{$Think.const.SRHB}' + zhaopian + '" data-size="'+width+'x'+height+'">'
                            html += '<img  style="max-width:250px;max-height:250px;" src="{$Think.const.SR}' + zhaopian + '"/>'
                            html += '</a>'
                            html += '</figure>'
                        }
                        html += '</div>'
                    }else{
                        html += '<div class="my-gallery">'
                        for (var k = 0; k < res[i].picture.length; k++) {
                            var zhaopian = res[i].picture[k].picture_url //内容照片
                            var height = res[i].picture[k].pictureheight;//图片高度
                            if(height>0){
                                height = height;
                            }else{
                                height = 800;
                            }
                            var width = res[i].picture[k].picturewidth;//图片宽度
                            if(width>0){
                                width = width;
                            }else{
                                width = 800;
                            }
                            html += '<figure>'
                            html += ' <a href="{$Think.const.SRHB}' + zhaopian + '" data-size="'+width+'x'+height+'">'
                            html += '<img src="{$Think.const.SR}' + zhaopian + '" />'
                            html += '</a>'
                            html += '</figure>'
                        }
                        html += '</div>'
                    }
//                        html += '</div> '
                    html += '</div>'

                    html += '</div>'
                    html += '<div class="three">'

                    html += '<span class="aef">' +  time + '</span>'

                    html += '<hr class="split">'
                    html += '<input type="hidden" class="aeg" value="' + message_id + '" />'
                    html += '<input type="hidden" class="aec" value="' + send_user_id + '" />'
                    html += "<a style='text-decoration:none' href='{:U('read')}?message_id=" + message_id +"'>";
                    html += '<div class="pandect">总发' + shuliang + '，已读' +yidu + '，未读' + h + '</div>'
                    html += '</a>'
                    html += '</div>'

                    html += ' </div>'

                }
                $(".wteacher").append(html);
                $(".times").hide();
                var img_width = $(".my-gallery img").width()
                $(".my-gallery img").height(img_width)
                var initPhotoSwipeFromDOM = function(gallerySelector) {

                    // parse slide data (url, title, size ...) from DOM elements
                    // (children of gallerySelector)
                    var parseThumbnailElements = function(el) {
                        var thumbElements = el.childNodes,
                            numNodes = thumbElements.length,
                            items = [],
                            figureEl,
                            linkEl,
                            size,
                            item;

                        for (var i = 0; i < numNodes; i++) {

                            figureEl = thumbElements[i]; // <figure> element

                            // include only element nodes
                            if (figureEl.nodeType !== 1) {
                                continue;
                            }

                            linkEl = figureEl.children[0]; // <a> element

                            size = linkEl.getAttribute('data-size').split('x');

                            // create slide object
                            item = {
                                src: linkEl.getAttribute('href'),
                                w: parseInt(size[0], 10),
                                h: parseInt(size[1], 10)
                            };



                            if (figureEl.children.length > 1) {
                                // <figcaption> content
                                item.title = figureEl.children[1].innerHTML;
                            }

                            if (linkEl.children.length > 0) {
                                // <img> thumbnail element, retrieving thumbnail url
                                item.msrc = linkEl.children[0].getAttribute('src');
                            }

                            item.el = figureEl; // save link to element for getThumbBoundsFn
                            items.push(item);
                        }

                        return items;
                    };

                    // find nearest parent element
                    var closest = function closest(el, fn) {
                        return el && (fn(el) ? el : closest(el.parentNode, fn));
                    };

                    // triggers when user clicks on thumbnail
                    var onThumbnailsClick = function(e) {
                        e = e || window.event;
                        e.preventDefault ? e.preventDefault() : e.returnValue = false;

                        var eTarget = e.target || e.srcElement;

                        // find root element of slide
                        var clickedListItem = closest(eTarget, function(el) {
                            return (el.tagName && el.tagName.toUpperCase() === 'FIGURE');
                        });

                        if (!clickedListItem) {
                            return;
                        }

                        // find index of clicked item by looping through all child nodes
                        // alternatively, you may define index via data- attribute
                        var clickedGallery = clickedListItem.parentNode,
                            childNodes = clickedListItem.parentNode.childNodes,
                            numChildNodes = childNodes.length,
                            nodeIndex = 0,
                            index;

                        for (var i = 0; i < numChildNodes; i++) {
                            if (childNodes[i].nodeType !== 1) {
                                continue;
                            }

                            if (childNodes[i] === clickedListItem) {
                                index = nodeIndex;
                                break;
                            }
                            nodeIndex++;
                        }



                        if (index >= 0) {
                            // open PhotoSwipe if valid index found
                            openPhotoSwipe(index, clickedGallery);
                        }
                        return false;
                    };

                    // parse picture index and gallery index from URL (#&pid=1&gid=2)
                    var photoswipeParseHash = function() {
                        var hash = window.location.hash.substring(1),
                            params = {};

                        if (hash.length < 5) {
                            return params;
                        }

                        var vars = hash.split('&');
                        for (var i = 0; i < vars.length; i++) {
                            if (!vars[i]) {
                                continue;
                            }
                            var pair = vars[i].split('=');
                            if (pair.length < 2) {
                                continue;
                            }
                            params[pair[0]] = pair[1];
                        }

                        if (params.gid) {
                            params.gid = parseInt(params.gid, 10);
                        }

                        return params;
                    };

                    var openPhotoSwipe = function(index, galleryElement, disableAnimation, fromURL) {
                        var pswpElement = document.querySelectorAll('.pswp')[0],
                            gallery,
                            options,
                            items;

                        items = parseThumbnailElements(galleryElement);

                        // define options (if needed)
                        options = {
                            // define gallery index (for URL)
                            galleryUID: galleryElement.getAttribute('data-pswp-uid'),
                            getThumbBoundsFn: function(index) {
                                // See Options -> getThumbBoundsFn section of documentation for more info
                                var thumbnail = items[index].el.getElementsByTagName('img')[0], // find thumbnail
                                    pageYScroll = window.pageYOffset || document.documentElement.scrollTop,
                                    rect = thumbnail.getBoundingClientRect();

                                return {
                                    x: rect.left,
                                    y: rect.top + pageYScroll,
                                    w: rect.width
                                };
                            }

                        };

                        // PhotoSwipe opened from URL
                        if (fromURL) {
                            if (options.galleryPIDs) {
                                // parse real index when custom PIDs are used
                                // http://photoswipe.com/documentation/faq.html#custom-pid-in-url
                                for (var j = 0; j < items.length; j++) {
                                    if (items[j].pid == index) {
                                        options.index = j;
                                        break;
                                    }
                                }
                            } else {
                                // in URL indexes start from 1
                                options.index = parseInt(index, 10) - 1;
                            }
                        } else {
                            options.index = parseInt(index, 10);
                        }

                        // exit if index not found
                        if (isNaN(options.index)) {
                            return;
                        }

                        if (disableAnimation) {
                            options.showAnimationDuration = 0;
                        }

                        // Pass data to PhotoSwipe and initialize it
                        gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);
                        gallery.init();
                    };

                    // loop through all gallery elements and bind events
                    var galleryElements = document.querySelectorAll(gallerySelector);

                    for (var i = 0, l = galleryElements.length; i < l; i++) {
                        galleryElements[i].setAttribute('data-pswp-uid', i + 1);
                        galleryElements[i].onclick = onThumbnailsClick;
                    }

                    // Parse URL and open gallery if it contains #&pid=3&gid=1
                    var hashData = photoswipeParseHash();
                    if (hashData.pid && hashData.gid) {
                        openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);
                    }
                };

                // execute above function
                initPhotoSwipeFromDOM('.my-gallery');
                initPhotoSwipeFromDOM('.my');
                $(".weiwie").click(function() {

                    var message_ids = $('.aeg', this).val();
                    var send_user_id = $('.aec', this).val();
                    location.href = "{:U('Xiang')}?message_id=" + message_ids + "&send_user_id=" + send_user_id + "";

                })
                $(".aaaa").click(function(event) {

                    event.stopPropagation();

                });


            },
            error: function() {
                console.log('系统错误,请稍后重试');
            }
        });
    })
    $(".cue").hide();

    var window_height = $(window).height()
    $(".cue").height(window_height)
    setTimeout(
        function() {
            $(".cue").hide()
        }, 1500
    )
    $(".fanhui").click(function() {
        location.href = "__ROOT__/index.php/weixin/Tindex";

    })
</script>



</body>

</html>